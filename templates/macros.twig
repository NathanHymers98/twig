{% macro printProducts(products, emptyMessage) %} {# A macro takes two arguments, ini this case I am passing it the array of products to print and an empty message is there are no products
                                                    By using macros, we can eliminate duplicated code by being able to display two seperate arrays or collections by using one macro that takes in the array as the first argument
                                                    and displays a message if there are no products in the second argument. Macros can be used in various different situations.#}
    {% for product in products %}
        <div class="span4">
            <h2>{{ product.name }}</h2>

            <div class="product-img">
                <img src="../assets/images/{{ product.imagePath }}" alt="{{ product.name }}"/>
            </div>

            {#<div class="price">#}
            {#{{ (random()/100)|number_format(1) }}#}

            {#{% if random(10) < 5 %}#}
            {#<div>Wow, this is some cheap swag!</div>#}
            {#{% endif %}#}
            {#</div>#}
        </div>

        {% if loop.index is divisibleby(3) and not loop.last %} {# This if uses the loop variable and one of its values, index to count how many products are returned from the for statement at the top
                                                                     and checks to see if it can be divived by 3. To avoid an extra row being added if we are on the last item, I am using loop.last which gets
                                                                     the last item in the products collection so if loop.index counts up to that, the loop will stop and no more rows will be added#}
            </div><div class="row">
        {% endif %}
    {% else %}
        <div class="alert alert-error span12">
            {{ emptyMessage }}
        </div>
    {% endfor %}
{% endmacro %}